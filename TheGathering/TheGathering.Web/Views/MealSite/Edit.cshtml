@model TheGathering.Web.ViewModels.MealSite.MealSiteViewModel

@{
	ViewBag.Title = "Edit";
}

<script type="text/javascript" src="~/Scripts/Bing Maps/BMaps2.js"></script>
<script type="text/javascript" src="~/Scripts/Meal Display/MealDisplay.js"></script>

@if (Model != null && !string.IsNullOrEmpty(Model.Error))
{
    <div class="alert alert-danger" role="alert">
        Error: @(Model.Error)
    </div>
}

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	<div class="row">
		<div class="col-sm-12">
			<h2>Edit</h2>
			<h4>Meal Site Location</h4>
		</div>
	</div>

	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Latitude, new { @id = "lat" });
	@Html.HiddenFor(model => model.Longitude, new { @id = "lon" });

	<div class="row">
		<div class="col-sm-12">
			<div class="panel panel-default container-fluid">
				<div class="form-group">

				</div>
				<div class="form-group">
					<span class="control-label col-md-2"><b>Address Input</b></span>
					<div id="searchBoxContainer">
						<input id="searchBox" class="form-control">
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
					@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
					@Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", @id = "addressLineTbx", onchange = "updateLonLat()" } })
					@Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
					@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "cityTbx" } })
					@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
					@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @id = "stateTbx" } })
					@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
					@Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control", @id = "postalCodeTbx" } })
					@Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CrossStreet1, htmlAttributes: new { @class = "control-label col-md-2" })
					@Html.EditorFor(model => model.CrossStreet1, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CrossStreet1, "", new { @class = "text-danger" })
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CrossStreet2, htmlAttributes: new { @class = "control-label col-md-2" })
					@Html.EditorFor(model => model.CrossStreet2, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CrossStreet2, "", new { @class = "text-danger" })
				</div>

				<div class="form-group">
					<label class="control-label col-md-2">Part of The Gathering</label>
					@Html.CheckBoxFor(model => model.IsTheGatheringSite, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.IsTheGatheringSite, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-sm-12">
			<div class="panel panel-default container-fluid">
				<h3>
					Breakfast
					@Html.CheckBoxFor(model => model.Breakfast_Used, new { onclick = "showHide(1)", id = "check1" })
				</h3>
				<div id="text1">
					<div class="form-group">
						@Html.LabelFor(model => model.Breakfast_DaysServed, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Breakfast_DaysServed, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Breakfast_DaysServed, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Breakfast_MaximumGuestsServed, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Breakfast_MaximumGuestsServed, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Breakfast_MaximumGuestsServed, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Breakfast_MinimumGuestsServed, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Breakfast_MinimumGuestsServed, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Breakfast_MinimumGuestsServed, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Breakfast_StartTime, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Breakfast_StartTime, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Breakfast_StartTime, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Breakfast_EndTime, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Breakfast_EndTime, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Breakfast_EndTime, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-sm-12">
			<div class="panel panel-default container-fluid">
				<h3>
					Lunch
					@Html.CheckBoxFor(model => model.Lunch_Used, new { onclick = "showHide(2)", id = "check2" })
				</h3>
				<div id="text2">
					<div class="form-group">
						@Html.LabelFor(model => model.Lunch_DaysServed, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Lunch_DaysServed, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Lunch_DaysServed, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Lunch_MaximumGuestsServed, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Lunch_MaximumGuestsServed, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Lunch_MaximumGuestsServed, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Lunch_MinimumGuestsServed, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Lunch_MinimumGuestsServed, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Lunch_MinimumGuestsServed, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Lunch_StartTime, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Lunch_StartTime, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Lunch_StartTime, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Lunch_EndTime, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Lunch_EndTime, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Lunch_EndTime, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-sm-12">
			<div class="panel panel-default container-fluid">
				<h3>
					Dinner
					@Html.CheckBoxFor(model => model.Dinner_Used, new { onclick = "showHide(3)", id = "check3" })
				</h3>
				<div id="text3">
					<div class="form-group">
						@Html.LabelFor(model => model.Dinner_DaysServed, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Dinner_DaysServed, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Dinner_DaysServed, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Dinner_MaximumGuestsServed, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Dinner_MaximumGuestsServed, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Dinner_MaximumGuestsServed, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Dinner_MinimumGuestsServed, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Dinner_MinimumGuestsServed, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Dinner_MinimumGuestsServed, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Dinner_StartTime, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Dinner_StartTime, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Dinner_StartTime, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Dinner_EndTime, htmlAttributes: new { @class = "control-label" })
						@Html.EditorFor(model => model.Dinner_EndTime, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Dinner_EndTime, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Submit" class="btn btn-default" />
		</div>
	</div>
	<script>
		loadAll();
	</script>
	<script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=initAutosuggest' async defer></script>
}
